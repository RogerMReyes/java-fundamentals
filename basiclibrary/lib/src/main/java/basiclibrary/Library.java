/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Random;

public class Library {
    public boolean someLibraryMethod() {
        return true;
    }

    public int[] roll(int n){
        int[] newArray = new int[n];
        Random r = new Random();
        for(int i = 0; i < n; i++){
            int diceRoll = r.nextInt(6);
            diceRoll += 1;
            newArray[i] = diceRoll;
        }
        return newArray;
    }

    public boolean containsDuplicates(int[] array){
        for(int i = 0; i <= array.length-2; i++){
            for(int j = i+1; j <= array.length-1; j++){
                if(array[i] == array[j]){
                    return true;
                }
            }
        }
        return false;
    }

    public float calcAvgOfArray(int[] array){
        float sum = 0;
        for(float value : array){
            sum += value;
        }
        float avg = sum / array.length;
        return avg;
    }

    public int[] lowestAvgArrayImproved(int[][] array){
        int[] lowestAvgArray = array[0];
        for(int i = 1; i < array.length; i++){
            if(calcAvgOfArray(lowestAvgArray) > calcAvgOfArray(array[i])){
                lowestAvgArray = array[i];
            }
        }
        return lowestAvgArray;
    }
    public String analyzeWeatherData(int[][] temps){
        HashSet<Integer> tempSet = new HashSet<>();
        int min = 100;
        int max = 0;
        for(int[] array : temps){
            for(int value : array){
                tempSet.add(value);
                if(value < min){
                    min = value;
                }
                if(value > max){
                    max = value;
                }
            }
        }
        String response = "High: " + max + "\n"
                + "Low: " + min + "\n";
        for(int i = min; i < max; i++){
            if(!tempSet.contains(i)){
                response += "Never saw temperature: " + i + "\n";
            }
        }
        return response;
    }

    public String tally(List<String> votes){
        HashMap<String, Integer> count = new HashMap<>();
        int topVoter = 0;
        String winner = "";
        for(String name : votes){
            if(!count.containsKey(name)){
                count.put(name, 1);
            }
            else {
                count.put(name, count.get(name) + 1);
                if(count.get(name) > topVoter){
                    winner = name;
                    topVoter = count.get(name);
                }
            }
        }
        return winner;
    }
}
